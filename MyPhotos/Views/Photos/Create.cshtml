@model MyPhotos.Models.Photos

@{
    ViewBag.Title = "添加图片";
}

<h2>添加图片</h2>

<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/jquery-3.1.1.js"></script>
<script type="text/javascript">
    //点击取消选择后恢复空值
    function reupload() {
        document.getElementById('uploadFile').value = "";
        document.getElementById('img').src = "";
        document.getElementById('fs').innerText = "";
        //$('#uploadFile').attr('value', "");
        //$('#img').attr('src', "");
        //$('#fs').attr('innerText', '');
        $('#reselect').hide();
    };
    $(function () {
        //选择图片后显示预览和文件大小
        $('#uploadFile').on("change", function () {
            var file = this.files[0];
            if (this.files && file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#reselect').show();
                    $('#img').attr('src', e.target.result);
                    //$('#fn').text(file.name);
                    $('#fs').text(file.size / 1024 / 1024 + "Mb");
                }
                reader.readAsDataURL(file);
            }
        })
    });
    function btnsubmit() {
        //判断是否选择文件
        var name = document.getElementById('uploadFile').value;//获取文件值
        if (!name) {
            alert("请选择文件！");
            return false;
        }

        //判断文件类型是否允许上传
        var isnext = false;
        var ext = name.substr(name.lastIndexOf(".") + 1).toLocaleLowerCase();//获取文件后缀名
        var filetypes = ["jpg", "png", "gif", "jpeg", "bmp"];//图片后缀
        for (var i = 0; i < filetypes.length; i++) {
            if (filetypes[i] == ext) {
                isnext = true;
                break;
            }
        }
        if (!isnext) {
            alert("请选择图片文件！");
            return false;
        }
    }
</script>

@*实现带模型上传功能的重点：修改new { enctype = "multipart/form-data" }或者指定Controller/Action，待确认*@
@using (Html.BeginForm("Create", "Photos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Photos</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model._ptypeid, "图片类型", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("_ptypeid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model._ptypeid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._ptitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._ptitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._ptitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._purl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*实现上传功能的重点：name属性必须与后台httppostedfilebase的对象名一致*@
                <input type="file" id="uploadFile" name="uploadFile" value="" /> <br />
                <img src="" id="img" alt="" width="180" /> <br />
                @*<span id="fn"></span> <br />*@
                <span id="fs"></span> <br />
                <input type="button" hidden id="reselect" value="取消选择" onclick="reupload();" />
                @*<input type="submit" name="Submit" id="Submit" value="Upload" />
                    @Html.EditorFor(model => model._purl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model._purl, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._pdes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model._pdes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._pdes, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model._pclicks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model._pclicks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._pclicks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model._ptime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model._ptime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._ptime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model._pup, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model._pup, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._pup, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model._pdown, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model._pdown, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._pdown, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnsub" value="添加" onclick="return btnsubmit(); " class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回图片列表", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
