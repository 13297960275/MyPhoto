@model MyPhotos.Models.Photos

@{
    ViewBag.Title = "添加图片";
}

<h2>添加图片</h2>

<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/jquery-3.1.1.js"></script>
<script src="~/Referances/script/uploadImg.js"></script>

@*实现带模型上传功能的重点：修改new { enctype = "multipart/form-data" }或者指定Controller/Action，待确认*@
@using (Html.BeginForm("Create", "Photos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Photos</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model._ptypeid, "图片类型", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("_ptypeid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model._ptypeid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._ptitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._ptitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._ptitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._purl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*实现上传功能的重点：name属性必须与后台httppostedfilebase的对象名一致*@
                <input type="file" id="uploadFile" name="uploadFile" value="" /> <br />
                <img src="" id="img" alt="" width="180" /> <br />
                @*<span id="fn"></span> <br />*@
                <span id="fs"></span> <br />
                <input type="button" hidden id="reselect" value="取消选择" onclick="reupload();" />
                @*<input type="submit" name="Submit" id="Submit" value="Upload" />
                    @Html.EditorFor(model => model._purl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model._purl, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._pdes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model._pdes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._pdes, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model._pclicks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model._pclicks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._pclicks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model._ptime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model._ptime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._ptime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model._pup, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model._pup, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._pup, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model._pdown, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model._pdown, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model._pdown, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnsub" value="添加" onclick="return btnsubmit(); " class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回图片列表", "PagerIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
